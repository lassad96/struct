algorithme_find_sum_twosets
//solution with array
var
tab1: Array_Of INTEGER[3];
tab2: Array_Of INTEGER[4];
sum:=0;
i: INTEGER;
j: INTEGER.
begin
temp :=0;
tab1:=[3,1,7,9};
tab2:={2,4,1,9,3};
FOR i FROM 0 TO tab1.length-1 STEP 1  DO
FOR j FROM 0 TO tab2.length-1 STEP 1 DO
IF (tab1[i]<>tab2[j]) THEN
    
    temp:=temp+1;
END_IF
END_FOR
IF(temp=tab2.length-1)
sum:= sum+tab1[i];
END_IF
END_FOR
FOR i FROM 0 TO tab1.length-1 STEP 1  DO
FOR j FROM 0 TO tab2.length-1 STEP 1 DO
IF (tab1[i]<>tab2[j]) THEN
    temp:=temp+1;
END_IF
IF(temp=tab1.length-1)
sum:= sum+tab2[i];
END_IF
END_FOR
END
//SOLLUTION WITH hashtab
var
i: INTEGER;
sum:=0;
tab= {3,1,7,9,2,4,1,9,3};
FOR i FROM 0 TO tab.length-1 STEP 1 DO
END_FOR
if (htab.lookup(tab[i])= true) then
count:=  htab.get(tab[i]);
htab.insert(tab[i], count+1);
else
htab.insert(tab[i],1);
END_IF
END_FOR
FOR i FROM 0 TO tab.length-1 STEP 1 DO
IF(htab.get(tab[i] =1)) then
sum := sum +tab[i];
END_IF
END_FOR
write(sum)
END

//ALGO DISTINCT
var
set1 :  Array_Of_INTEGER[3];
set2 :  Array_Of_INTEGER[3];
sum : INTEGER ;=0;
i,j : INTEGER;
begin
set1 :={12,13,6,10};
set2 :={13,10,16,15};
FOR i FROM 0 TO set1.lenght-1 STEP 1 DO
FOR j FROM 0 TO set2.lenght-1 STEP 1 DO
if (set1[i]=set2[j]) then
sum := sum+ set1[i];
else
if( set2[i]=set1[j])then
sum := sum+set2[i];
END_IF
END_FOR
write(sum)
END

// ALGO DISTINCT_HASH_TABLE

var
hashtab : HASH_TABLE(integer,integer);
sum: integer :=0;
i, count ; INTEGER ;
tab; Array_Of_INTEGER;
begin
tab = {3,1,7,9,2,4,1,9,3};
FOR i FROM 0 TO tab.length-1 STEP 1 DO
IF (htab.lookup(tab[i]= true)) THEN
    count:= htab.get(tab[i]);
    htab.insert(tab[i], count+1);
    else
    htab.insert(tab[i],1)

END_IF
END_FOR
FOR i FROM 0 TO tab.length-1 STEP 1 DO
IF (htab.get(tab[i]> 1)) THEN
sum := sum+tab[i];
END_IF
END_FOR
write(sum)
END





